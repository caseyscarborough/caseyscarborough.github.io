var templates={Stream:'<div class="gha-feed">{{{text}}}<div class="gha-push-small"></div>{{{footer}}}</div>',Activity:'<div id="{{id}}" class="gha-activity">                 <div class="gha-activity-icon"><i class="fa {{icon}}"></i></div>                 <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>                 <div class="gha-clear"></div>               </div>',SingleLineActivity:'<div class="gha-activity gha-small">                           <div class="gha-activity-icon"><i class="fa {{icon}}"></i></div>                           <div class="gha-message">{{{userLink}}} {{{message}}}</div><div class="gha-time">{{{timeString}}}</div>                           <div class="gha-clear"></div>                         </div>',UserHeader:'<div class="gha-header">                   <div class="gha-github-icon"><i class="fa fa-github"></i></div>                   <div class="gha-user-info{{withoutName}}">{{{userNameLink}}}<p>{{{userLink}}}</p></div>                   <div class="gha-gravatar">{{{gravatarLink}}}</div>                 </div><div class="gha-push"></div>',Footer:'<div class="gha-footer">Public Activity <a href="https://github.com/caseyscarborough/github-activity" target="_blank">GitHub Activity Stream</a>',NoActivity:'<div class="gha-info">This user does not have any public activity yet.</div>',NotFound:'<div class="gha-info">User {{username}} wasn\'t found.</div>',CommitCommentEvent:"commented on commit {{{commentLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",CreateEvent:"created {{payload.ref_type}} {{{branchLink}}}{{{repoLink}}}",DeleteEvent:"deleted {{payload.ref_type}} {{payload.ref}} at {{{repoLink}}}",FollowEvent:"started following {{{targetLink}}}",ForkEvent:"forked {{{repoLink}}} to {{{forkLink}}}",GistEvent:"{{actionType}} {{{gistLink}}}",GollumEvent:"{{actionType}} the {{{repoLink}}} wiki<br>{{{userGravatar}}}<small>{{{message}}}</small>",IssueCommentEvent:"commented on {{issueType}} {{{issueLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",IssuesEvent:"{{payload.action}} issue {{{issueLink}}}<br>{{{userGravatar}}}<small>{{payload.issue.title}}</small>",MemberEvent:"added {{{memberLink}}} to {{{repoLink}}}",PublicEvent:"open sourced {{{repoLink}}}",PullRequestEvent:"{{payload.action}} pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{payload.pull_request.title}}</small>{{{mergeMessage}}}",PullRequestReviewCommentEvent:"commented on pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",PushEvent:'pushed to {{{branchLink}}}{{{repoLink}}}<br>                <ul class="gha-commits">{{#payload.commits}}<li><small>{{{committerGravatar}}} {{{shaLink}}} {{message}}</small></li>{{/payload.commits}}</ul>                <small class="gha-message-commits">{{{commitsMessage}}}</small>',ReleaseEvent:'released {{{tagLink}}} at {{{repoLink}}}<br>{{{userGravatar}}}<small><i class="fa fa-download"></i>  {{{zipLink}}}',WatchEvent:"starred {{{repoLink}}}"},icons={CommitCommentEvent:"fa-comments",CreateEvent:"fa-plus",DeleteEvent:"fa-trash-o",FollowEvent:"fa-male",ForkEvent:"fa-code-fork",GistEvent:"fa-code",GollumEvent:"fa-book",IssuesEvent:"fa-check-circle-o",IssueCommentEvent:"fa-comments",MemberEvent:"fa-male",PublicEvent:"fa-globe",PullRequestEvent:"fa-reply",PullRequestReviewCommentEvent:"fa-comments",PushEvent:"fa-arrow-circle-o-up",ReleaseEvent:"fa-tags",WatchEvent:"fa-star"},singleLineActivities=["CreateEvent","DeleteEvent","FollowEvent","ForkEvent","GistEvent","MemberEvent","WatchEvent"];function md5cycle(k,c){var d=k[0],l=k[1],a=k[2],b=k[3];d=ff(d,l,a,b,c[0],7,-680876936);b=ff(b,d,l,a,c[1],12,-389564586);a=ff(a,b,d,l,c[2],17,606105819);l=ff(l,a,b,d,c[3],22,-1044525330);d=ff(d,l,a,b,c[4],7,-176418897);b=ff(b,d,l,a,c[5],12,1200080426);a=ff(a,b,d,l,c[6],17,-1473231341);l=ff(l,a,b,d,c[7],22,-45705983);d=ff(d,l,a,b,c[8],7,1770035416);b=ff(b,d,l,a,c[9],12,-1958414417);a=ff(a,b,d,l,c[10],17,-42063);l=ff(l,a,b,d,c[11],22,-1990404162);d=ff(d,l,a,b,c[12],7,1804603682);b=ff(b,d,l,a,c[13],12,-40341101);a=ff(a,b,d,l,c[14],17,-1502002290);l=ff(l,a,b,d,c[15],22,1236535329);d=gg(d,l,a,b,c[1],5,-165796510);b=gg(b,d,l,a,c[6],9,-1069501632);a=gg(a,b,d,l,c[11],14,643717713);l=gg(l,a,b,d,c[0],20,-373897302);d=gg(d,l,a,b,c[5],5,-701558691);b=gg(b,d,l,a,c[10],9,38016083);a=gg(a,b,d,l,c[15],14,-660478335);l=gg(l,a,b,d,c[4],20,-405537848);d=gg(d,l,a,b,c[9],5,568446438);b=gg(b,d,l,a,c[14],9,-1019803690);a=gg(a,b,d,l,c[3],14,-187363961);l=gg(l,a,b,d,c[8],20,1163531501);d=gg(d,l,a,b,c[13],5,-1444681467);b=gg(b,d,l,a,c[2],9,-51403784);a=gg(a,b,d,l,c[7],14,1735328473);l=gg(l,a,b,d,c[12],20,-1926607734);d=hh(d,l,a,b,c[5],4,-378558);b=hh(b,d,l,a,c[8],11,-2022574463);a=hh(a,b,d,l,c[11],16,1839030562);l=hh(l,a,b,d,c[14],23,-35309556);d=hh(d,l,a,b,c[1],4,-1530992060);b=hh(b,d,l,a,c[4],11,1272893353);a=hh(a,b,d,l,c[7],16,-155497632);l=hh(l,a,b,d,c[10],23,-1094730640);d=hh(d,l,a,b,c[13],4,681279174);b=hh(b,d,l,a,c[0],11,-358537222);a=hh(a,b,d,l,c[3],16,-722521979);l=hh(l,a,b,d,c[6],23,76029189);d=hh(d,l,a,b,c[9],4,-640364487);b=hh(b,d,l,a,c[12],11,-421815835);a=hh(a,b,d,l,c[15],16,530742520);l=hh(l,a,b,d,c[2],23,-995338651);d=ii(d,l,a,b,c[0],6,-198630844);b=ii(b,d,l,a,c[7],10,1126891415);a=ii(a,b,d,l,c[14],15,-1416354905);l=ii(l,a,b,d,c[5],21,-57434055);d=ii(d,l,a,b,c[12],6,1700485571);b=ii(b,d,l,a,c[3],10,-1894986606);a=ii(a,b,d,l,c[10],15,-1051523);l=ii(l,a,b,d,c[1],21,-2054922799);d=ii(d,l,a,b,c[8],6,1873313359);b=ii(b,d,l,a,c[15],10,-30611744);a=ii(a,b,d,l,c[6],15,-1560198380);l=ii(l,a,b,d,c[13],21,1309151649);d=ii(d,l,a,b,c[4],6,-145523070);b=ii(b,d,l,a,c[11],10,-1120210379);a=ii(a,b,d,l,c[2],15,718787259);l=ii(l,a,b,d,c[9],21,-343485551);k[0]=add32(d,k[0]);k[1]=add32(l,k[1]);k[2]=add32(a,k[2]);k[3]=add32(b,k[3])}function cmn(a,j,k,l,b,i){j=add32(add32(j,a),add32(l,i));return add32((j<<b)|(j>>>(32-b)),k)}function ff(l,m,a,b,n,c,d){return cmn((m&a)|((~m)&b),l,m,n,c,d)}function gg(l,m,a,b,n,c,d){return cmn((m&b)|(a&(~b)),l,m,n,c,d)}function hh(l,m,a,b,n,c,d){return cmn(m^a^b,l,m,n,c,d)}function ii(l,m,a,b,n,c,d){return cmn(a^(m|(~b)),l,m,n,c,d)}function md51(j){txt="";var h=j.length,i=[1732584193,-271733879,-1732584194,271733878],f;for(f=64;f<=j.length;f+=64){md5cycle(i,md5blk(j.substring(f-64,f)))}j=j.substring(f-64);var g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(f=0;f<j.length;f++){g[f>>2]|=j.charCodeAt(f)<<((f%4)<<3)}g[f>>2]|=128<<((f%4)<<3);if(f>55){md5cycle(i,g);for(f=0;f<16;f++){g[f]=0}}g[14]=h*8;md5cycle(i,g);return i}function md5blk(d){var f=[],e;for(e=0;e<64;e+=4){f[e>>2]=d.charCodeAt(e)+(d.charCodeAt(e+1)<<8)+(d.charCodeAt(e+2)<<16)+(d.charCodeAt(e+3)<<24)}return f}var hex_chr="0123456789abcdef".split("");function rhex(f){var d="",e=0;for(;e<4;e++){d+=hex_chr[(f>>(e*8+4))&15]+hex_chr[(f>>(e*8))&15]}return d}function hex(d){for(var c=0;c<d.length;c++){d[c]=rhex(d[c])}return d.join("")}function md5(b){return hex(md51(b))}function add32(a,b){return(a+b)&4294967295}if(md5("hello")!="5d41402abc4b2a76b9719d911017c592"){function add32(f,g){var h=(f&65535)+(g&65535),e=(f>>16)+(g>>16)+(h>>16);return(e<<16)|(h&65535)}}function millisecondsToStr(c){function b(j){return(j>1)?"s ago":" ago"}var i=Math.floor(c/1000);var e=Math.floor(i/31536000);if(e){return e+" year"+b(e)}var a=Math.floor((i%=31536000)/2592000);if(a){return a+" month"+b(a)}var h=Math.floor((i%=2592000)/86400);if(h){return h+" day"+b(h)}var f=Math.floor((i%=86400)/3600);if(f){return"about "+f+" hour"+b(f)}var d=Math.floor((i%=3600)/60);if(d){return d+" minute"+b(d)}var g=i%60;if(g){return g+" second"+b(g)}return"just now"}function pluralize(b,a){if(a!==1){return b+"s"}return b}function renderLink(b,c,a){if(!c){c=b}if(typeof(a)==="undefined"){a=""}return Mustache.render('<a class="'+a+'" href="{{url}}" target="_blank">{{{title}}}</a>',{url:b,title:c})}function renderGitHubLink(b,c,a){if(!c){c=b}if(typeof(a)==="undefined"){a=""}return renderLink("https://github.com/"+b,c,a)}function getMessageFor(f){var c=f.payload;f.repoLink=renderGitHubLink(f.repo.name);f.userGravatar=Mustache.render('<div class="gha-gravatar-user"><img src="{{url}}" class="gha-gravatar-small"></div>',{url:f.actor.avatar_url});if(c.ref){if(c.ref.substring(0,11)==="refs/heads/"){f.branch=c.ref.substring(11)}else{f.branch=c.ref}f.branchLink=renderGitHubLink(f.repo.name+"/tree/"+f.branch,f.branch)+" at "}if(c.commits){var i=c.before+"..."+c.head;var d=c.commits.length;if(d===2){f.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">View comparison for these 2 commits &raquo;</a>',{repo:f.repo.name,shaDiff:i})}else{if(d>2){f.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">{{length}} more '+pluralize("commit",d-2)+" &raquo;</a>",{repo:f.repo.name,shaDiff:i,length:c.size-2})}}c.commits.forEach(function(l,k){if(l.message.length>66){l.message=l.message.substring(0,66)+"..."}if(k<2){l.shaLink=renderGitHubLink(f.repo.name+"/commit/"+l.sha,l.sha.substring(0,6),"gha-sha");l.committerGravatar=Mustache.render('<img class="gha-gravatar-commit" src="https://gravatar.com/avatar/{{hash}}?s=30&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="16" />',{hash:md5(l.author.email)})}else{c.commits.splice(2,c.size);return false}})}if(c.issue){var h=f.repo.name+"#"+c.issue.number;f.issueLink=renderLink(c.issue.html_url,h);f.issueType="issue";if(c.issue.pull_request){f.issueType="pull request"}}if(c.pull_request){var b=c.pull_request;f.pullRequestLink=renderLink(c.html_url,f.repo.name+"#"+b.number);f.mergeMessage="";if(c.pull_request.merged){c.action="merged";var j="{{c}} "+pluralize("commit",b.commits)+" with {{a}} "+pluralize("addition",b.additions)+" and {{d}} "+pluralize("deletion",b.deletions);f.mergeMessage=Mustache.render('<br><small class="gha-message-merge">'+j+"</small>",{c:b.commits,a:b.additions,d:b.deletions})}}if(c.comment&&c.comment.pull_request_url){var h=f.repo.name+"#"+c.comment.pull_request_url.split("/").pop();f.pullRequestLink=renderGitHubLink(c.comment.pull_request_url,h)}if(c.comment&&c.comment.body){f.comment=c.comment.body;if(f.comment.length>150){f.comment=f.comment.substring(0,150)+"..."}if(c.comment.html_url&&c.comment.commit_id){var h=f.repo.name+"@"+c.comment.commit_id.substring(0,10);f.commentLink=renderLink(c.comment.html_url,h)}}if(f.type==="ReleaseEvent"){f.tagLink=renderLink(c.release.html_url,c.release.tag_name);f.zipLink=renderLink(c.release.zipball_url,"Download Source Code (zip)")}if(f.type==="GollumEvent"){var g=c.pages[0];f.actionType=g.action;f.message=f.actionType.charAt(0).toUpperCase()+f.actionType.slice(1)+" ";f.message+=renderGitHubLink(g.html_url,g.title)}if(f.type==="FollowEvent"){f.targetLink=renderGitHubLink(c.target.login)}if(f.type==="ForkEvent"){f.forkLink=renderGitHubLink(c.forkee.full_name)}if(f.type==="MemberEvent"){f.memberLink=renderGitHubLink(c.member.login)}if(c.gist){f.actionType=c.action==="fork"?c.action+"ed":c.action+"d";f.gistLink=renderLink(c.gist.html_url,"gist: "+c.gist.id)}var j=Mustache.render(templates[f.type],f);var a=millisecondsToStr(new Date()-new Date(f.created_at));var e={message:j,icon:icons[f.type],timeString:a,userLink:renderGitHubLink(f.actor.login)};if(singleLineActivities.indexOf(f.type)>-1){return Mustache.render(templates.SingleLineActivity,e)}return Mustache.render(templates.Activity,e)}function getHeaderHTML(a){if(a.name){a.userNameLink=renderLink(a.html_url,a.name)}else{a.withoutName=" without-name"}a.userLink=renderLink(a.html_url,a.login);a.gravatarLink=renderLink(a.html_url,'<img src="'+a.avatar_url+'">');return Mustache.render(templates.UserHeader,a)}function getActivityHTML(a){var b="";if(a.length===0){return Mustache.render(templates.NoActivity,{})}a.forEach(function(e,c){b+=getMessageFor(e)});return b}function getOutputFromRequest(a,c){var e,d,b=new XMLHttpRequest();b.open("GET",a,false);b.onload=function(){if(b.status>=200&&b.status<400){d=JSON.parse(b.responseText);e=c(d)}else{return false}};b.onerror=function(){console.log("An error occurred connecting to the url.")};b.send();return e}function renderStream(a,b){b.innerHTML=Mustache.render(templates.Stream,{text:a,footer:templates.Footer});b.style.position="relative"}var GitHubActivity=(function(){this.feed=function(c){if(!c.username||!c.selector){return false}var a=c.selector,e="https://api.github.com/users/"+c.username,g=e+"/events",b,h;if(c.clientId&&c.clientSecret){var f="?client_id="+c.clientId+"&client_secret="+c.clientSecret;e+=f;g+=f}b=getOutputFromRequest(e,getHeaderHTML);if(b){b+=getOutputFromRequest(g,getActivityHTML)}else{b=Mustache.render(templates.NotFound,{username:c.username})}h=a.charAt(0)==="#"?document.getElementById(a.substring(1)):document.getElementsByClassName(a.substring(1));if(h instanceof HTMLCollection){for(var d=0;d<h.length;d++){renderStream(b,h[d])}}else{renderStream(b,h)}};return this})();