---
layout: project
title: Projects &middot; Instagram API
group: Projects
---

# Instagram API

<i class="fa fa-cloud-download"></i> <a href="https://github.com/caseyscarborough/instagram/zipball/master">Download .zip</a> &nbsp; 
<i class="fa fa-cloud-download"></i> <a href="https://github.com/caseyscarborough/instagram/tarball/master">Download .tar.gz</a> &nbsp; 
<i class="fa fa-github"></i> <a href="https://github.com/caseyscarborough/instagram">View on GitHub</a>

[![Gem Version](https://badge.fury.io/rb/instagram_api.png)](http://badge.fury.io/rb/instagram_api) [![Code Climate](https://codeclimate.com/github/caseyscarborough/instagram.png)](https://codeclimate.com/github/caseyscarborough/instagram) [![Build Status](https://travis-ci.org/caseyscarborough/instagram.png?branch=master)](https://travis-ci.org/caseyscarborough/instagram)

This gem is a simple and easy to use wrapper for Instagram's API.

## Documentation

The documentation for this gem can be found at [rdoc.info/gems/instagram_api](http://rdoc.info/gems/instagram_api).

## Installation

Add this line to your application's Gemfile:

<pre class="highlight"><code class="ruby">gem 'instagram_api'
</code></pre>
And then execute:

<pre class="no-highlight"><code><span class="dollar">$</span> bundle</code></pre>

Or install it yourself as:

<pre class="no-highlight"><code><span class="dollar">$</span> gem install instagram_api</code></pre>

## Usage

<pre class="highlight"><code class="ruby">require 'instagram_api'
</code></pre>
All methods in Instagram's API require some kind of authentication. You can retrieve any public data by using just your client ID, but it is recommended to authorize yourself (and your users) using an access_token. You can get your client ID and client secret by visiting [http://instagram.com/developer](http://instagram.com/developer).

<pre class="highlight"><code class="ruby"># Instantiate a new client.
client = Instagram.client(
  :client_id     => '2bfe9d72a4aae8f06a31025b7536be80',
  :client_secret => '9d667c2b7fae7a329f32b6df17926154',
  :callback_url  => 'http://example.com/'
)

# Visit the authorization URL in your browser and login.
client.authorize_url
# => "https://api.instagram.com/oauth/authorize/?client_id=2bfe9d72a4aae8f06a31025b7536be80&redirect_uri=http://example.com/&response_type=code"

# Retrieve the code from the URL parameters and use it to get an access token.
client.get_access_token('88fb89ab65454da2a06f2c6dacd09436')
# => '1313345.3fedf64.a0fcb7f40e02fe3da50500'
</code></pre>
The last method, `get_access_token`, will return your access token as well as set it for your client. You can then access any method in the API using your client.

Alternatively, after you or your user have authenticated, you can reinstantiate your client using the previously returned access token.

<pre class="highlight"><code class="ruby">client = Instagram.client(:access_token => '1313345.3fedf64.a0fcb7f40e02fe3da50500')
</code></pre>
### Users API Methods

You can access various information about Instagram users by using the following methods:

<pre class="highlight"><code class="ruby"># Get a user information by id or username.
client.user(16500486)
client.user('caseyscarborough')

# Get the authenticated user's information.
client.user

# Search for a user by username.
client.search('github')

# Retrieve an authenticated user's feed.
client.feed

# Get a user's recent updates.
client.recent(16500486)

# Retrieve an authenticated user's updates.
client.recent

# Get an authenticated user's liked photos/videos.
client.liked
</code></pre>
See the [Instagram User Endpoints](http://instagram.com/developer/endpoints/users/) for more information.

### Media API Methods

You can retrieve media information by using the following methods:

<pre class="highlight"><code class="ruby"># Get information about a media object by its ID.
client.media(42020)

# Search for a media item by latitude and longitude (required),
# with distance constraints (default 1000 meters).
client.media_search(:lat => "48.858844", :lng => "2.294351")
client.media_search(:lat => "48.858844", :lng => "2.294351", :distance => 2000)

# Search with Unix timestamp constraints.
client.media_search(
  :lat => "48.858844",
  :lng => "2.294351",
  :min_timestamp => 1357020000,
  :max_timestamp => 1375246800
)

# Get a list of popular media at the moment.
client.popular_media
</code></pre>
See the [Instagram Media Endpoints](http://instagram.com/developer/endpoints/media/) for more information.

## Sample Application

The following is a sample application using this gem and [Sinatra](http://sinatrarb.com). Make sure that the sinatra and instagram_api gems are installed before running it.

<pre class="no-highlight"><code><span class="dollar">$</span> gem install sinatra instagram_api</code></pre>

Afterwards, copy the contents of the following file into a file called sample.rb and add your client ID and client secret (retrieved by registering a new application at [http://instagram.com/developer](http://instagram.com/developer)).

<pre class="highlight"><code class="ruby">require 'sinatra'
require 'instagram_api'

# Go to http://instagram.com/developer to get your client ID and client secret.
CLIENT_ID = "YOUR CLIENT ID"
CLIENT_SECRET = "YOUR CLIENT SECRET"

# Set the redirect uri for your application to the following:
REDIRECT_URI = "http://localhost:4567/callback"

client = Instagram.client(
  :client_id => CLIENT_ID,
  :client_secret => CLIENT_SECRET,
  :callback_url => REDIRECT_URI
)

get '/' do
  output = '<h2>Popular Media</h2>'
  client.popular_media.data.each do |p|
    output << "<a href='#{p.link}'><img src='#{p.images.thumbnail.url}'></a>&nbsp;"
  end
  output << '<br /><h3><a href="/auth">Click here</a> to authenticate with Instagram.</h3>'
  output
end

get '/auth' do
  redirect client.authorize_url
end

get '/callback' do
  client.get_access_token(params[:code])
  redirect '/dashboard'
end

get '/dashboard' do
  user = client.user
  output = "<h2>#{user.data.username}'s feed</h2>"
  client.feed.data.each do |f|
    output << "<a href='#{f.link}'><img src='#{f.images.low_resolution.url}'></a><br />
    <img src='#{f.user.profile_picture}' width='20'>&nbsp;#{f.user.username}<br /><br />"
  end
  output
end
</code></pre>
You can then run the application by issuing the following command from the file's directory:

<pre class="no-highlight"><code><span class="dollar">$</span> ruby sample.rb</code></pre>

Then navigate to [localhost:4567](http://localhost:4567) to see the application in action.

You can view/download this file [here](https://gist.github.com/caseyscarborough/6331272).

## Supported Ruby Versions

These are the currently supported Ruby versions:

* Ruby 1.8.7
* Ruby 1.9.2
* Ruby 1.9.3
* Ruby 2.0.0

This library may work on other versions of Ruby, but these are the versions that the library is tested against.

## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request